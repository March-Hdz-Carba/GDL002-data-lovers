{"version":3,"sources":["data.js"],"names":["filPokeType","dataPokemon","condition","typePoke","filter","data","type","console","log","sortPoke","orderValue","sort","a","b","name","averCandy","pokeData","pokeAll","elemt","candy_count","map","averPokeRedu","reduce","accumalatore","valueNext","averPokeCandy","length","window","loversData"],"mappings":"AAAA;AACA,MAAMA,cAAc,CAACC,WAAD,EAAaC,SAAb,KAA2B;AACzC,QAAMC,WAAWF,YAAYG,MAAZ,CAAoBC,QAAQA,KAAKC,IAAL,CAAU,CAAV,MAAiBJ,SAAjB,IAA8BG,KAAKC,IAAL,CAAU,CAAV,MAAiBJ,SAA3E,CAAjB;AACAK,UAAQC,GAAR,CAAYL,QAAZ;AACA,SAAOA,QAAP;AACL,CAJD;;AAMA;AACA,MAAMM,WAAW,CAACL,MAAD,EAAQM,UAAR,KAAuB;AACtC,MAAIA,eAAe,KAAnB,EAAyB;AACvB,WAAON,OAAOO,IAAP,CAAY,CAACC,CAAD,EAAGC,CAAH,KAAO;AACxB,UAAGD,EAAEE,IAAF,GAASD,EAAEC,IAAd,EAAmB;AACjB,eAAO,CAAP;AACD,OAAC,IAAGF,EAAEE,IAAF,GAASD,EAAEC,IAAd,EAAmB;AACnB,eAAO,CAAC,CAAR;AACD;AACF,KANM,CAAP;AAOD;AACC,SAAO,CAAP;AACH,CAXD;;AAaA;AACA,MAAMC,YAAaC,QAAD,IAAc;AAC9B,MAAIC,UAAUD,QAAd;AACEC,UAAQb,MAAR,CAAec,SAASA,MAAMC,WAA9B;AACAF,UAAQG,GAAR,CAAYF,SAASA,MAAMC,WAA3B;AACA,MAAIE,eAAeJ,QAAQK,MAAR,CAAe,UAASC,YAAT,EAAsBC,SAAtB,EAAgC;AAAC,WAAOD,eAAaC,SAApB;AAA+B,GAA/E,CAAnB;AACA,MAAIC,gBAAgBJ,eAAaJ,QAAQS,MAAzC;AACAnB,UAAQC,GAAR,CAAYa,YAAZ;AACA,SAAOI,aAAP;AACH,CARD;;AAWAE,OAAOC,UAAP,GAAoB;AAClB5B,eAAaA,WADK;AAElBS,YAAUA,QAFQ;AAGlBM,aAAWA;AAHO,CAApB","file":"data.js","sourcesContent":["//Nueva funcion para filtrar por tipo.\nconst filPokeType = (dataPokemon,condition) => {\n      const typePoke = dataPokemon.filter (data => data.type[0] === condition || data.type[1] === condition);\n      console.log(typePoke);\n      return typePoke;     \n};\n\n//Funcion para order. FUNCIONA.\nconst sortPoke = (filter,orderValue) => {\n  if (orderValue === \"a-z\"){\n    return filter.sort((a,b)=>{\n      if(a.name > b.name){\n        return 1;\n      } if(a.name < b.name){\n        return -1;\n      } \n    });\n  }\n    return 0;\n};\n\n//Funcion para promediar cantidad de candy_count\nconst averCandy = (pokeData) => {\n  let pokeAll = pokeData;\n    pokeAll.filter(elemt => elemt.candy_count);\n    pokeAll.map(elemt => elemt.candy_count);\n    let averPokeRedu = pokeAll.reduce(function(accumalatore,valueNext){return accumalatore+valueNext;});\n    let averPokeCandy = averPokeRedu/pokeAll.length;\n    console.log(averPokeRedu);\n    return averPokeCandy;\n};\n\n\nwindow.loversData = {\n  filPokeType: filPokeType,\n  sortPoke: sortPoke,\n  averCandy: averCandy\n};\n\n\n\n\n\n\n\n\n\n\n"]}