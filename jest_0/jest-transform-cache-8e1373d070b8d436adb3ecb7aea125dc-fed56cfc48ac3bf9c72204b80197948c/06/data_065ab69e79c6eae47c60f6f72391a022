b78609b7757f4520cd990524293e0b5e
//Nueva funcion para filtrar por tipo.
const filPokeType = (dataPokemon, condition) => {
  const typePoke = dataPokemon.filter(data => data.type[0] === condition || data.type[1] === condition);
  return typePoke;
};

//Funcion para order. FUNCIONA.
const sortPoke = (filter, orderValue) => {
  if (orderValue === "a-z") {
    return filter.sort((a, b) => {
      if (a.name > b.name) {
        return 1;
      }if (a.name < b.name) {
        return -1;
      }
    });
  }
  return 0;
};

//Funcion para promediar cantidad de candy_count por tipo pokemon
const averCandy = pokeData => {
  let pokeAll = pokeData;
  let pokeAllFilterCandy = pokeAll.filter(elemt => elemt.candy_count);
  let NewPokeAllFilterCandy = pokeAllFilterCandy.map(elemt => elemt.candy_count);
  let averPokeRedu = NewPokeAllFilterCandy.reduce(function (accumalatore, valueNext) {
    return accumalatore + valueNext;
  });
  let averPokeCandy = averPokeRedu / pokeAllFilterCandy.length;
  return averPokeCandy;
};

//Funcion para buscar pokemon
const findPokemon = (dataPokemon, condition) => {
  const especificPoke = dataPokemon.find(data => data.name === condition);
  return especificPoke;
};

window.loversData = {
  filPokeType: filPokeType,
  sortPoke: sortPoke,
  averCandy: averCandy,
  findPokemon: findPokemon
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsiZmlsUG9rZVR5cGUiLCJkYXRhUG9rZW1vbiIsImNvbmRpdGlvbiIsInR5cGVQb2tlIiwiZmlsdGVyIiwiZGF0YSIsInR5cGUiLCJzb3J0UG9rZSIsIm9yZGVyVmFsdWUiLCJzb3J0IiwiYSIsImIiLCJuYW1lIiwiYXZlckNhbmR5IiwicG9rZURhdGEiLCJwb2tlQWxsIiwicG9rZUFsbEZpbHRlckNhbmR5IiwiZWxlbXQiLCJjYW5keV9jb3VudCIsIk5ld1Bva2VBbGxGaWx0ZXJDYW5keSIsIm1hcCIsImF2ZXJQb2tlUmVkdSIsInJlZHVjZSIsImFjY3VtYWxhdG9yZSIsInZhbHVlTmV4dCIsImF2ZXJQb2tlQ2FuZHkiLCJsZW5ndGgiLCJmaW5kUG9rZW1vbiIsImVzcGVjaWZpY1Bva2UiLCJmaW5kIiwid2luZG93IiwibG92ZXJzRGF0YSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxjQUFjLENBQUNDLFdBQUQsRUFBYUMsU0FBYixLQUEyQjtBQUN6QyxRQUFNQyxXQUFXRixZQUFZRyxNQUFaLENBQW9CQyxRQUFRQSxLQUFLQyxJQUFMLENBQVUsQ0FBVixNQUFpQkosU0FBakIsSUFBOEJHLEtBQUtDLElBQUwsQ0FBVSxDQUFWLE1BQWlCSixTQUEzRSxDQUFqQjtBQUNBLFNBQU9DLFFBQVA7QUFDTCxDQUhEOztBQUtBO0FBQ0EsTUFBTUksV0FBVyxDQUFDSCxNQUFELEVBQVFJLFVBQVIsS0FBdUI7QUFDdEMsTUFBSUEsZUFBZSxLQUFuQixFQUF5QjtBQUN2QixXQUFPSixPQUFPSyxJQUFQLENBQVksQ0FBQ0MsQ0FBRCxFQUFHQyxDQUFILEtBQU87QUFDeEIsVUFBR0QsRUFBRUUsSUFBRixHQUFTRCxFQUFFQyxJQUFkLEVBQW1CO0FBQ2pCLGVBQU8sQ0FBUDtBQUNELE9BQUMsSUFBR0YsRUFBRUUsSUFBRixHQUFTRCxFQUFFQyxJQUFkLEVBQW1CO0FBQ25CLGVBQU8sQ0FBQyxDQUFSO0FBQ0Q7QUFDRixLQU5NLENBQVA7QUFPRDtBQUNDLFNBQU8sQ0FBUDtBQUNILENBWEQ7O0FBYUE7QUFDQSxNQUFNQyxZQUFhQyxRQUFELElBQWM7QUFDOUIsTUFBSUMsVUFBVUQsUUFBZDtBQUNBLE1BQUlFLHFCQUFxQkQsUUFBUVgsTUFBUixDQUFnQmEsS0FBRCxJQUFZQSxNQUFNQyxXQUFqQyxDQUF6QjtBQUNBLE1BQUlDLHdCQUF3QkgsbUJBQW1CSSxHQUFuQixDQUF3QkgsS0FBRCxJQUFZQSxNQUFNQyxXQUF6QyxDQUE1QjtBQUNBLE1BQUlHLGVBQWVGLHNCQUFzQkcsTUFBdEIsQ0FBNkIsVUFBU0MsWUFBVCxFQUFzQkMsU0FBdEIsRUFBZ0M7QUFBQyxXQUFPRCxlQUFhQyxTQUFwQjtBQUErQixHQUE3RixDQUFuQjtBQUNBLE1BQUlDLGdCQUFnQkosZUFBYUwsbUJBQW1CVSxNQUFwRDtBQUNBLFNBQU9ELGFBQVA7QUFDRCxDQVBEOztBQVNBO0FBQ0MsTUFBTUUsY0FBYyxDQUFDMUIsV0FBRCxFQUFjQyxTQUFkLEtBQTRCO0FBQzlDLFFBQU0wQixnQkFBZ0IzQixZQUFZNEIsSUFBWixDQUFrQnhCLFFBQVFBLEtBQUtPLElBQUwsS0FBY1YsU0FBeEMsQ0FBdEI7QUFDQSxTQUFPMEIsYUFBUDtBQUNGLENBSEE7O0FBTURFLE9BQU9DLFVBQVAsR0FBb0I7QUFDbEIvQixlQUFhQSxXQURLO0FBRWxCTyxZQUFVQSxRQUZRO0FBR2xCTSxhQUFXQSxTQUhPO0FBSWxCYyxlQUFhQTtBQUpLLENBQXBCIiwiZmlsZSI6ImRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL051ZXZhIGZ1bmNpb24gcGFyYSBmaWx0cmFyIHBvciB0aXBvLlxuY29uc3QgZmlsUG9rZVR5cGUgPSAoZGF0YVBva2Vtb24sY29uZGl0aW9uKSA9PiB7XG4gICAgICBjb25zdCB0eXBlUG9rZSA9IGRhdGFQb2tlbW9uLmZpbHRlciAoZGF0YSA9PiBkYXRhLnR5cGVbMF0gPT09IGNvbmRpdGlvbiB8fCBkYXRhLnR5cGVbMV0gPT09IGNvbmRpdGlvbik7XG4gICAgICByZXR1cm4gdHlwZVBva2U7ICAgICBcbn07XG5cbi8vRnVuY2lvbiBwYXJhIG9yZGVyLiBGVU5DSU9OQS5cbmNvbnN0IHNvcnRQb2tlID0gKGZpbHRlcixvcmRlclZhbHVlKSA9PiB7XG4gIGlmIChvcmRlclZhbHVlID09PSBcImEtelwiKXtcbiAgICByZXR1cm4gZmlsdGVyLnNvcnQoKGEsYik9PntcbiAgICAgIGlmKGEubmFtZSA+IGIubmFtZSl7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfSBpZihhLm5hbWUgPCBiLm5hbWUpe1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9IFxuICAgIH0pO1xuICB9XG4gICAgcmV0dXJuIDA7XG59O1xuXG4vL0Z1bmNpb24gcGFyYSBwcm9tZWRpYXIgY2FudGlkYWQgZGUgY2FuZHlfY291bnQgcG9yIHRpcG8gcG9rZW1vblxuY29uc3QgYXZlckNhbmR5ID0gKHBva2VEYXRhKSA9PiB7XG4gIGxldCBwb2tlQWxsID0gcG9rZURhdGE7XG4gIGxldCBwb2tlQWxsRmlsdGVyQ2FuZHkgPSBwb2tlQWxsLmZpbHRlcigoZWxlbXQpID0+IChlbGVtdC5jYW5keV9jb3VudCkpO1xuICBsZXQgTmV3UG9rZUFsbEZpbHRlckNhbmR5ID0gcG9rZUFsbEZpbHRlckNhbmR5Lm1hcCgoZWxlbXQpID0+IChlbGVtdC5jYW5keV9jb3VudCkpO1xuICBsZXQgYXZlclBva2VSZWR1ID0gTmV3UG9rZUFsbEZpbHRlckNhbmR5LnJlZHVjZShmdW5jdGlvbihhY2N1bWFsYXRvcmUsdmFsdWVOZXh0KXtyZXR1cm4gYWNjdW1hbGF0b3JlK3ZhbHVlTmV4dDt9KTtcbiAgbGV0IGF2ZXJQb2tlQ2FuZHkgPSBhdmVyUG9rZVJlZHUvcG9rZUFsbEZpbHRlckNhbmR5Lmxlbmd0aDtcbiAgcmV0dXJuIGF2ZXJQb2tlQ2FuZHk7XG59O1xuXG4vL0Z1bmNpb24gcGFyYSBidXNjYXIgcG9rZW1vblxuIGNvbnN0IGZpbmRQb2tlbW9uID0gKGRhdGFQb2tlbW9uLCBjb25kaXRpb24pID0+IHtcbiAgIGNvbnN0IGVzcGVjaWZpY1Bva2UgPSBkYXRhUG9rZW1vbi5maW5kIChkYXRhID0+IGRhdGEubmFtZSA9PT0gY29uZGl0aW9uKTtcbiAgIHJldHVybiBlc3BlY2lmaWNQb2tlO1xufTtcblxuXG53aW5kb3cubG92ZXJzRGF0YSA9IHtcbiAgZmlsUG9rZVR5cGU6IGZpbFBva2VUeXBlLFxuICBzb3J0UG9rZTogc29ydFBva2UsXG4gIGF2ZXJDYW5keTogYXZlckNhbmR5LFxuICBmaW5kUG9rZW1vbjogZmluZFBva2Vtb25cbn07XG5cblxuXG5cblxuXG5cblxuXG5cbiJdfQ==